From e188229739550b8a60108ca081e049d5970f0ded Mon Sep 17 00:00:00 2001
From: Po Cheng <po.cheng@technexion.com>
Date: Wed, 26 Feb 2020 18:23:39 +0800
Subject: [PATCH 1/3] pico-imx8mm-header-file-mender-integration

Signed-off-by: Po Cheng <po.cheng@technexion.com>
---
 include/configs/pico-imx8mm.h | 72 ++++++++++---------------------------------
 1 file changed, 16 insertions(+), 56 deletions(-)

diff --git a/include/configs/pico-imx8mm.h b/include/configs/pico-imx8mm.h
index f6a8472..eb836a8 100644
--- a/include/configs/pico-imx8mm.h
+++ b/include/configs/pico-imx8mm.h
@@ -121,7 +121,7 @@
  */
 #define JAILHOUSE_ENV \
 	"jh_clk= \0 " \
-	"jh_mmcboot=setenv fdt_file fsl-imx8mm-evk-root.dtb; setenv jh_clk clk_ignore_unused; run mmcboot\0 " \
+	"jh_mmcboot=setenv fdt_file fsl-imx8mm-evk-root.dtb; setenv jh_clk clk_ignore_unused; run bootcmd\0 " \
 	"jh_netboot=setenv fdt_file fsl-imx8mm-evk-root.dtb; setenv jh_clk clk_ignore_unused; run netboot\0 "
 
 #ifdef CONFIG_NAND_BOOT
@@ -140,59 +140,32 @@
 #define SYS_AUXCORE_BOOTDATA_TCM	0x007E0000
 
 /* Initial environment variables */
-#define CONFIG_EXTRA_ENV_SETTINGS		\
+#define CONFIG_EXTRA_ENV_SETTINGS \
 	CONFIG_MFG_ENV_SETTINGS \
 	JAILHOUSE_ENV \
-	"script=boot.scr\0" \
-	"image=Image\0" \
+	"baseboard=pi\0" \
+	"form=pico\0" \
 	"console=ttymxc1,115200 earlycon=ec_imx6q,0x30890000,115200\0" \
-	"fdt_addr=0x43000000\0"			\
-	"fdt_high=0xffffffffffffffff\0"		\
-	"fdt_buffer=8192\0"	\
+	"fdt_addr_r=0x43000000\0" \
+	"fdt_high=0xffffffffffffffff\0" \
+	"fdt_buffer=8192\0" \
 	"boot_fdt=try\0" \
 	"fdt_file=undefined\0" \
-	"initrd_addr=0x43800000\0"		\
+	"initrd_addr=0x43800000\0" \
 	"initrd_high=0xffffffffffffffff\0" \
-	"m4image=hello_world.bin\0" \
-	"m4loadaddr="__stringify(SYS_AUXCORE_BOOTDATA_TCM)"\0" \
-	"m4boot=fatload mmc ${mmcdev}:${mmcpart} ${m4loadaddr} ${m4image}; " \
-	"dcache flush; bootaux ${m4loadaddr}\0" \
-	"mmcdev="__stringify(CONFIG_SYS_MMC_ENV_DEV)"\0" \
-	"mmcpart=" __stringify(CONFIG_SYS_MMC_IMG_LOAD_PART) "\0" \
-	"mmcroot=" CONFIG_MMCROOT " rootwait rw\0" \
-	"mmcautodetect=yes\0" \
-	"mmcargs=setenv bootargs ${jh_clk} console=${console} root=${mmcroot}\0 " \
-	"UMS=ums 0 mmc ${mmcdev}\0" \
-	"loadbootscript=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};\0" \
-	"bootscript=echo Running bootscript from mmc ...; " \
-		"source\0" \
-	"loadimage=fatload mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}\0" \
-	"loadfdt=" \
-		"echo Loading fdt_file ${fdt_file}...; " \
-		"fatload mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}\0" \
+	"setbootargs=setenv bootargs ${jh_clk} console=${console}\0" \
 	"loadoverlay=" \
-		"fdt addr ${fdt_addr} && fdt resize ${fdt_buffer}; " \
-		"setexpr fdtovaddr ${fdt_addr} + 0xF0000; " \
+		"fdt addr ${fdt_addr_r} && fdt resize ${fdt_buffer}; " \
+		"setexpr fdtovaddr ${fdt_addr_r} + 0xF0000; " \
 		"for ov in ${dtoverlay}; do " \
 			"echo Overlaying ${ov}...; " \
-			"fatload mmc ${mmcdev}:${mmcpart} ${fdtovaddr} imx8mm-pico-pi-${ov}.dtbo && fdt apply ${fdtovaddr}; " \
+			"ext4load ${mender_uboot_root} ${fdtovaddr} ${fdtovaddr} boot/${soc_type}-${form}-${baseboard}-${ov}.dtbo && fdt apply ${fdtovaddr}; " \
 		"done\0" \
-	"mmcboot=echo Booting from mmc ...; " \
-		"run mmcargs; " \
-		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if run loadfdt; then " \
-				"run loadoverlay; " \
-				"booti ${loadaddr} - ${fdt_addr}; " \
-			"else " \
-				"echo WARN: Cannot load the DT; " \
-			"fi; " \
-		"else " \
-			"echo wait for boot; " \
-		"fi;\0" \
 	"netargs=setenv bootargs ${jh_clk} console=${console} " \
 		"root=/dev/nfs " \
 		"ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp\0" \
 	"netboot=echo Booting from net ...; " \
+		"run mender_setup; " \
 		"run netargs;  " \
 		"if test ${ip_dyn} = yes; then " \
 			"setenv get_cmd dhcp; " \
@@ -201,27 +174,14 @@
 		"fi; " \
 		"${get_cmd} ${loadaddr} ${image}; " \
 		"if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-			"if ${get_cmd} ${fdt_addr} ${fdt_file}; then " \
-				"booti ${loadaddr} - ${fdt_addr}; " \
+			"if ${get_cmd} ${fdt_addr_r} ${fdt_file}; then " \
+				"booti ${loadaddr} - ${fdt_addr_r}; " \
 			"else " \
 				"echo WARN: Cannot load the DT; " \
 			"fi; " \
 		"else " \
 			"booti; " \
-		"fi;\0" \
-	"fitov=\"\"\0" \
-	"fit_addr=0x45800000\0" \
-	"fit_high=0xffffffff\0" \
-	"fit_overlay=for ov in ${dtoverlay}; do " \
-			"echo Overlaying ${ov}...; setenv fitov \"${fitov}#${ov}\"; " \
-		"done; echo fit conf: ${fdt_file}${fitov};\0" \
-	"fitargs=setenv bootargs ${jh_clk} console=${console} root=/dev/ram0 rootwait rw " \
-		"modules-load=g_acm_ms g_acm_ms.stall=0 g_acm_ms.removable=1 g_acm_ms.file=/dev/mmcblk2 " \
-		"g_acm_ms.iSerialNumber=${ethaddr} g_acm_ms.iManufacturer=TechNexion\0" \
-	"loadfit=fatload mmc ${mmcdev}:${mmcpart} ${fit_addr} tnrescue.itb\0" \
-	"fitboot=echo Booting from FIT image ...; " \
-		"run fit_overlay; run fitargs; " \
-		"bootm ${fit_addr}#${fdt_file}${fitov}\0"
+		"fi;\0"
 
 #define CONFIG_BOOTCOMMAND \
 	   "mmc dev ${mmcdev}; if mmc rescan; then " \
-- 
2.7.4

